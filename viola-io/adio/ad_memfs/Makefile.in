CC          = @CC@
AR          = @AR@
LIBNAME     = @LIBNAME@
srcdir      = @srcdir@
CC_SHL      = @CC_SHL@
SHLIBNAME   = @SHLIBNAME@

INCLUDE_DIR = -I@MPI_INCLUDE_DIR@ -I${srcdir}/../include -I../include -I../common -I../ad_tunnelfs -I${srcdir}/../../../src/tunnelfs_io_server
CFLAGS      = @CFLAGS@ $(INCLUDE_DIR)

C_COMPILE_SHL = $(CC_SHL) @CFLAGS@ $(INCLUDE_DIR)

@VPATH@

AD_MEMFS_OBJECTS = ad_memfs_files.o ad_memfs_close.o ad_memfs_read.o \
      ad_memfs_open.o ad_memfs_write.o ad_memfs_done.o \
      ad_memfs_fcntl.o ad_memfs_iread.o ad_memfs_iwrite.o ad_memfs_wait.o \
      ad_memfs_resize.o \
      ad_memfs.o ad_memfs_rdcoll.o ad_memfs_wrcoll.o ad_memfs_seek.o ad_memfs_hints.o \
      ad_memfs_flush.o ad_memfs_delete.o ad_memfs_main.o ad_memfs_service.o \
      ad_memfs_functions.o ad_memfs_lock_main.o memfs_time.o queue.o memory.o


default: $(LIBNAME)
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    $(MAKE) $(SHLIBNAME).la ;\
	fi

.SUFFIXES: $(SUFFIXES) .p .lo

.c.o:
	$(CC) $(CFLAGS) -c $<
.c.lo:
	$(C_COMPILE_SHL) -c $<
	@mv -f $*.o $*.lo

$(LIBNAME): $(AD_MEMFS_OBJECTS)
	$(AR) $(LIBNAME) $(AD_MEMFS_OBJECTS)

AD_MEMFS_LOOBJECTS=$(AD_MEMFS_OBJECTS:.o=.lo)
$(SHLIBNAME).la: $(AD_MEMFS_LOOBJECTS)
	$(AR) $(SHLIBNAME).la $(AD_MEMFS_LOOBJECTS)

coverage:
	-@for file in  ${AD_MEMFS_OBJECTS:.o=.c} ; do \
		gcov -b -f $$file ; done

clean:
	@rm -f *.o *.lo
