ALL: default
##### User configurable options #####

MPIR_HOME    := @MPIR_HOME@
CC           := @MPICC@
CLINKER      := @MPICC@
CCC          := @MPICPLUSPLUS@
CCLINKER     := $(CCC)
F77          := @MPIF77@
FLINKER      := @MPIF77@
OPTFLAGS     := @OPTFLAGS@
MPIFDEP      := @MPIFDEP@
### End User configurable options ###

SHELL := /bin/sh
prefix     := @prefix@
top_srcdir := @top_srcdir@
srcdir     := @srcdir@
@VPATH@

PROFLIB :=
CFLAGS  := @CFLAGS@ @DEFS@
CCFLAGS := $(CFLAGS)
FFLAGS := @FFLAGS@
# Use LIBS to add any special libraries for C programs
LIBS := @LIB_PATH@ @LIB_LIST@
# Use FLIBS to add any special libraries for Fortran programs
FLIBS := @FLIB_PATH@ @LIB_LIST@
CEXECS := attrt ictest ictest2 ictest3 grouptest groupcreate \
	attrerr icdup split comm_dup
MPI2CEXECS := commnames
ifeq (@HAS_FORTRAN@,1)
	FEXECS := attrtest
	MPI2FEXECS := commnamesf
else
	FEXECS :=
	MPI2FEXECS :=
endif

EXECS := $(CEXECS) $(FEXECS)
MPI2EXECS := $(MPI2CEXECS) $(MPI2FEXECS)

default: $(EXECS)

#
# Note that runtests builds the executables as required
testing: 
	-./runtests $(TESTARGS)

linktest: default clean

all: testing

attrtest: $(MPIFDEP) attrtest.o
	$(FLINKER) $(OPTFLAGS) -o attrtest attrtest.o $(FLIBS)

commnamesf: $(MPIFDEP) commnamesf.o
	$(FLINKER) $(OPTFLAGS) -o commnamesf commnamesf.o $(FLIBS)

attrt: attrt.o test.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o attrt attrt.o test.o $(LIBS)

attrerr: attrerr.o test.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o attrerr attrerr.o test.o $(LIBS)

commnames: commnames.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o commnames commnames.o $(LIBS)
ictest: ictest.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o ictest ictest.o $(LIBS)
ictest2: ictest2.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o ictest2 ictest2.o $(LIBS)
ictest3: ictest3.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o ictest3 ictest3.o $(LIBS)
icdup: icdup.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o icdup icdup.o $(LIBS)
grouptest: grouptest.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o grouptest grouptest.o $(LIBS)
groupcreate: groupcreate.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o groupcreate groupcreate.o $(LIBS)
split: split.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o split split.o $(LIBS)
comm_dup: comm_dup.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o comm_dup comm_dup.o $(LIBS)


clean:
	@-rm -f *.o *~ PI* $(EXECS) $(MPI2EXECS) \
		core *.out *.diff *.trace mpif.h ${srcdir}/*.o *.stdo \
		work.pc work.pcl

distclean: clean
	@-rm -f Makefile runtests

.c.o:
	$(CC) $(CFLAGS) -c $<
.f.o:
	$(F77) $(FFLAGS) -c $<
