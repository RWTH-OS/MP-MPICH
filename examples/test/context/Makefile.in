# $Id$
##### User configurable options #####

CC           := @MPICC@
CLINKER      := $(CC)
F77          := @MPIF77@
FLINKER      := $(F77)
OPTFLAGS     := @OPTFLAGS@
### End User configurable options ###

SHELL := /bin/sh
prefix     := @prefix@
top_srcdir := @top_srcdir@
srcdir     := @srcdir@
@VPATH@

CFLAGS  := @CFLAGS@ @DEFS@
FFLAGS := @FFLAGS@
# Use LIBS to add any special libraries for C programs
LIBS := @LIB_PATH@ @LIB_LIST@
# Use FLIBS to add any special libraries for Fortran programs
FLIBS := @LIB_LIST@
CEXECS := attrt ictest ictest2 ictest3 grouptest groupcreate \
	attrerr icdup split comm_dup
MPI2CEXECS := commnames
ifeq ($(F77),)
	FEXECS :=
	MPI2FEXECS :=
else
	FEXECS := attrtest
	MPI2FEXECS := commnamesf
endif

EXECS := $(CEXECS) $(FEXECS)
MPI2EXECS := $(MPI2CEXECS) $(MPI2FEXECS)

default: $(EXECS)

# Note that runtests builds the executables as required
testing:
	-./runtests $(TESTARGS)

linktest: default clean

all: testing

attrtest: attrtest.o
	$(FLINKER) $(OPTFLAGS) -o $@ $^ $(FLIBS)

commnamesf: commnamesf.o
	$(FLINKER) $(OPTFLAGS) -o $@ $^ $(FLIBS)

attrt: attrt.o test.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)

attrerr: attrerr.o test.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)

commnames: commnames.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)
ictest: ictest.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)
ictest2: ictest2.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)
ictest3: ictest3.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)
icdup: icdup.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)
grouptest: grouptest.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)
groupcreate: groupcreate.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)
split: split.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)
comm_dup: comm_dup.o
	$(CLINKER) $(CFLAGS) $(OPTFLAGS) -o $@ $^ $(LIBS)


clean:
	@-rm -f *.o *~ PI* $(EXECS) $(MPI2EXECS) \
		core *.out *.diff *.trace mpif.h ${srcdir}/*.o *.stdo \
		work.pc work.pcl

distclean: clean
	@-rm -f Makefile runtests

.c.o:
	$(CC) $(CFLAGS) -c $<
.f.o:
	$(F77) $(FFLAGS) -c $<
