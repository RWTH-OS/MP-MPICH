AC_INIT

AC_MSG_NOTICE([pre-configure for MVAPICH under MetaMPICH's ch_mpx device])

AC_ARG_WITH([arch],AS_HELP_STRING(--with-arch=ARCH_TYPE,
	    [the type of machine that MPI is to be configured for]),
	    [[
	    # Extract arch-specific args
	    ARCH=$withval
	    ]],[ARCH=""])

AC_ARG_WITH([ibhome],AS_HELP_STRING(--with-ibhome=IBHOME,
	    [the path to the infiniband libs]),
	    [[
	    # Extract arch-specific args
	    IBHOME=$withval
	    ]],[IBHOME="./infiniband/"])

AC_ARG_WITH([hca],AS_HELP_STRING(--with-hca=HCA_TYPE,
	    [the type of the host channel adapter: MLX_PCI_EX_SDR, MLX_PCI_EX_DDR, MLX_PCI_X, PATH_HT, IBM_EHCA]),
	    [[
	    # Extract arch-specific args
	    HCA_COMPILE_FLAG="_$withval_"
	    ]],[HCA_COMPILE_FLAG="_MLX_PCI_EX_DDR_"])

# Most variables here can be overridden by exporting them in the environment
# before running this script.  Default values have been provided if the
# environment variable is not already set.

source ./make.mvapich.def

# The target HCA.  If not exported outside of this script, it will
# be prompted for.
#
# Supported:
#
# "_MLX_PCI_EX_SDR_"            [Mellanox PCI-Express (SDR)]
# "_MLX_PCI_EX_DDR_"            [Mellanox PCI-Express (DDR)]
# "_MLX_PCI_X_"                 [Mellanox PCI-X]
# "_PATH_HT_"                   [Pathscale HT]
# "_IBM_EHCA_"                  [IBM ehca]
#
if test -z "$HCA_COMPILE_FLAG" ; then
    source ./make.mvapich.detect
fi

# The target architecture.  If not exported outside of this script,
# it will be found automatically or prompted for if necessary.
# Supported: "_IA32_", "_IA64_", "_EM64T_", "_X86_64_"
#
if test -z "$ARCH" ; then
    arch
fi

# Mandatory variables.  All are checked except CXX and F90.
IBHOME=${IBHOME:-/usr/local}
IBHOME_LIB=${IBHOME_LIB:-/usr/local/lib}
PREFIX=${PREFIX:-/usr/local/mvapich}
export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export F77=${F77:-g77}
export F90=${F90:-}

if test $ARCH = "SOLARIS" ; then
    die_setup "MVAPICH GEN2 is not supported on Solaris."
elif test $ARCH = "MAC_OSX" ; then
    die_setup "MVAPICH GEN2 is not supported on MacOS."
fi

# Check mandatory variable settings.
if test -z "$IBHOME"  || test -z "$PREFIX" || test -z "$CC" || test -z "$F77" ; then
    die_setup "Please set mandatory variables in this script."
elif ! test -d $IBHOME ; then
    die_setup "IBHOME directory $IBHOME does not exist."
fi

# Optional variables.
#

# Whether to enable ROMIO support.  This is necessary if building the
# F90 modules.
if test -n "$F90" ; then
    ROMIO="--with-romio"
else
    ROMIO=${ROMIO:---without-romio}
fi

# Whether to use an optimized queue pair exchange scheme.  This is not
# checked for a setting in in the script.  It must be set here explicitly.
# Supported: "-DUSE_MPD_RING", "-DUSE_MPD_BASIC" and "" (to disable)
HAVE_MPD_RING=${HAVE_MPD_RING:-}

# Set this to override automatic optimization setting (-03).
OPT_FLAG=${OPT_FLAG:--O3}

export LIBS=${LIBS:--L${IBHOME_LIB} -Wl,-rpath=${IBHOME_LIB} -libverbs -lpthread}
export FFLAGS=${FFLAGS:--L${IBHOME_LIB}}
export CFLAGS=${CFLAGS:--D${ARCH} -DEARLY_SEND_COMPLETION -DMEMORY_SCALE -DVIADEV_RPUT_SUPPORT -DLAZY_MEM_UNREGISTER -DCH_GEN2 -D_SMP_ -D_SMP_RNDV_ -D${HCA_COMPILE_FLAG} ${HAVE_MPD_RING} -I${IBHOME}/include $OPT_FLAG}

# Prelogue
make distclean &>/dev/null

# Configure MVAPICH

AC_MSG_NOTICE([ARCH is $ARCH])
AC_MSG_NOTICE([IBHOME is $IBHOME])
AC_MSG_NOTICE([HCA type is $HCA_COMPILE_FLAG])

echo "Configuring MVAPICH..."

./configure_mvapich --with-device=ch_gen2 --with-arch=LINUX -prefix=${PREFIX} $1 \
	$ROMIO --without-mpe -lib="$LIBS" 2>&1 |tee config-mine.log
ret=$?
test $ret = 0 ||  die "configuration."

AC_MSG_NOTICE([configure for MVAPICH under MetaMPICH completed])
