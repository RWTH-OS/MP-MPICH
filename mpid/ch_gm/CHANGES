04/04/2005 (inclusion into MetaMPICH)
-------------------------------------

* MPID_MyWorldRank and MPID_MyWorldSize are not used in ch_gm anymore, because
  these variables are changed by Meta-MPICH after the device initialization and
  may then have values different from what the ch_gm-devices expect. Instead,
  MPID_GM_rank and MPID_GM_size are used in ch_gm.

05/01/2003 (1.2.5..10):
-----------------------

* Use ptmalloc instead of dlmalloc to provide a thread safe malloc lib.
* New design of the information retrieval at spawn time (sockets).
* Fix bug in unexpected blocking send to self (very rarely used).
* Add support for NUMA configuration mapping (From Kevin Van Maren at Unisys).
* Work around a bug in the Intel C compiler 7.x when compiling the malloc lib.
* Implement support for a generic remote shell command, enabling the use of 
  "ssh -P" to use non-privileged ports to push the limit of ssh-based 
  spawning method.
* add "sparc" to the case where alignement in the shared memory device should
  be respected (was only "sparc64" for Solaris before).
* Fix a (bad, ugly, shameful, stupid) performance bug when memory 
  registration is disabled (Solaris only).
* Remove a rare case of deadlock when memory registration is disabled 
  (Solaris only). 
* Add support for GM-2.
* Various bug fixes and cosmetic changes.



02/10/2003 (1.2.5..9):
-----------------------

* Work-around to catch Intel 7.0 compiler usage of mmap/munmap instead of 
  malloc/free when implementing the F90 allocate/deallocate statement. 
  Without this work-around (catch of the munmap syscall), use of F90 
  deallocate would silently corrupt memory.
* Implemented an mpirun.ch_gm.args file to support mpirun.ch_gm specific flags 
  with the top-level mpirun script. mpirun and mpirun.ch_gm are now completely 
  compatible.
* Fixed bug in local process detection using MPD; it was impossible to use 
  shared memory with MPD.
* Fixed bug in processing of unexpected self messages generated by 
  blocking send calls (improperly calling rhandle->finish).
* Merged Totalview support.
* Added support for DDT debugger.
* Added a protection to prevent the usage of the shared memory device at the 
  same time as blocking or hybrid GM receive mode. Devices are not allowed 
  to block in a multi-device configuration.
* Fixed a bug in the configure script to disable memory registration
  when using MPICH-GM on Solaris.
* Limit the rate of unexpected queue and delayed queue increases to avoid
  memory exhaustion with pathological (but still in spec) applications.
* Added a test to check if the malloc hooks used by MPICH-GM with memory 
  registration are used and not overloaded by another definition of malloc.
* Change the order of the flags and the hostname for ssh and rsh in 
  mpirun.ch_gm to support AIX.
* Change optimization level of the malloc lib compilation, Intel Compilers 
  were too aggressive with -O2.
* Minor typo corrections.


08/09/2002 (1.2.4..8a):
-----------------------

* Propagate the Machine file name from the mpirun call to the mpirun.ch_gm.pl 
  Perl script, if any.
* Better support/compatibility for Procgroup file (Thanks Maxim from .ru).
* Support for change of working directory (flag "-wd") and use of current 
  directory as default working directory (Thanks Luc Renambot from .nl). 


MPICH-GM 1.2.4..8:
==================

* New mpirun.ch_gm script:
  - Support for ProcGroup file, for spawning multiple executables (no support
    for heterogeneous configuration yet), using the flag "-pg".
  - Possibility to close stdin on the process MPI Id 0, to put jobs in
    background, using the flag "-s".
  - Perl script completely rewritten (usage and flags available with
    "mpirun.ch_gm" without arguments).
* Use of MPICH machine file instead of MPICH-GM specific "conf" file:
  GM ports are now dynamically and locally allocated by each process.
* Support for MPD (Multi-Purpose Daemon) for large configurations.
* Complete implementation of MPI_Abort().
* Implementation of MPI_Cancel for shared-memory messages.
* Shared memory support for intra-node communication is enabled by default,
  and may be disabled at run-time.  If you pass the "--gm-no-shmem" flag to
  mpirun.ch_gm at run-time, the shared memory device will be disabled.
* One major bug fix (GM Send timeout) and various minor ones.
* more hooks for progression in core, should slightly increase performance
  (your mileage may vary).
