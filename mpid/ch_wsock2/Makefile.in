
#
#  $Id$
#
#  (C) 1993,1995 by Argonne National Laboratory and Mississipi State University.
#      All rights reserved.  See COPYRIGHT in top-level directory.
#
# Eventually, there will be two sets of routines
#
#
##### User configurable options #####
META        = @META@
CC          = @CC@
CXX         = @CXX@
AR          = @AR@
RANLIB      = @RANLIB@
OPTFLAGS    = @OPTFLAGS@
SHELL       = /bin/sh
ASMFILES_O  = @ASMFILES_O@
prefix      = @prefix@
top_srcdir  = @top_srcdir@
srcdir      = @srcdir@
libbuild_dir = @libbuild_dir@
nt2unix_dir  = @nt2unix_dir@
DEFS        = @DEFS@ -I. -I${srcdir} @mpich_includes@ \
		-DMPID_DEVICE_CODE @GETNAME_DEFS@ @DEVCFLAGS@ @DEV_DEFS@ \
		-DRNDV_STATIC

@VPATH@

#ALL: default
ALL: libdev

LIBNAME  = ${libbuild_dir}/lib@MPILIBNAME@.a
LIBDEV   = libmpid.a
CFLAGS   = @CFLAGS@ $(OPTFLAGS) @OPTFLAGSC@ \
	   	-I${top_srcdir}/mpid/ch_ntshmem -I${top_srcdir}/mpid/ch2 \
		-I${top_srcdir}/mpid/util -I${nt2unix_dir} \
		-DMPID_DEVICE_CODE @GETNAME_DEFS@ @DEVCFLAGS@ @DEV_DEFS@
CFLAGSNOOPT   = @CFLAGS@ \
	   	-I${top_srcdir}/mpid/ch_ntshmem -I${top_srcdir}/mpid/ch2 \
		-I${top_srcdir}/mpid/util -I${nt2unix_dir} \
		-DMPID_DEVICE_CODE @GETNAME_DEFS@ @DEVCFLAGS@ @DEV_DEFS@
# See mpid/ch2/Makefile.in for a full list
# Many of the chxxxx files are replaced with shmemxxxx files because the
# shared memory version uses a slightly different form, in particular, it
# allocates packets from a shared area rather than on the call stack.
# chbeager.c chbrndv.c 
SOURCE   = adi2recv.c adi2send.c adi2init.c adi2probe.c adi2ssend.c \
	   adi2hsend.c adi2hrecv.c adi2hssend.c adi2pack.c adi2mpack.c \
	   adi2req.c adi2cancel.c \
	   Communicator.cpp TCPCommunicator.cpp getopt.cpp inSocket.cpp wsockpriv.cpp \
	   chdebug.c wsockbeager.c wsockinit.c wsockbrndv.c wsockneager.c \
	   wsockcancel.c  shmeminit.c wsockchkdev.c wsockshort.c \
	   shmemchkdev.c lfshmempriv.c canceldevs.c p2p.c shmemshort.c \
	   shmemdebug.c shmemneager.c shmemnrndv.c ProcHandles.cpp \
	   statistics.c \
	   chnodename.c chtick.c queue.c cmnargs.c \
	   mprerr.c tr2.c sbcnst2.c objtrace.c calltrace.c @DEVCFILES@
SOURCEC  = $(SOURCE)
SOURCEF  =
# chbeager.o chbrndv.o 
MPI_OBJECTS = adi2recv.o adi2send.o adi2init.o adi2probe.o adi2ssend.o \
	      adi2hsend.o adi2hrecv.o adi2hssend.o adi2pack.o adi2mpack.o \
	      adi2req.o adi2cancel.o \
	      Communicator.o TCPCommunicator.o getopt.o inSocket.o wsockpriv.o \
              chdebug.o wsockbeager.o wsockinit.o wsockbrndv.o wsockneager.o \
	      wsockcancel.o shmeminit.o  wsockchkdev.o wsockshort.o \
	      shmemchkdev.o lfshmempriv.o canceldevs.o p2p.o shmemshort.o \
	      shmemdebug.o shmemneager.o shmemnrndv.o ProcHandles.o \
	      statistics.o \
	      chnodename.o chtick.o queue.o cmnargs.o \
	      chcancel.o tr2.o sbcnst2.o \
	      objtrace.o calltrace.o $(ASMFILES_O) @DEVOFILES@

default: $(LIBNAME)
libdev: $(LIBDEV)

$(MPI_OBJECTS): ${top_srcdir}/mpid/ch2/mpid.h ${srcdir}/mpiddev.h
p2p.o: ${srcdir}/p2psemop.c ${srcdir}/p2p.c ${srcdir}/p2pwinprocs.c

#
# shmempriv is sensitive to memory access ordering.  Despite the use
# of VOLATILE statements, some compilers may be over-aggressive when
# compiling this file.  
#
lfshmempriv.o: ${srcdir}/lfshmempriv.c
	$(CC) ${DEFS} $(CFLAGSNOOPT) -c ${srcdir}/lfshmempriv.c

# default_all is the same as default, but without the RANLIB.  This
# can speed up the build (ranlibs can take a LONG time).  profile_all 
# is the same, but for the profile library
default_all: setlinks default_files
default_files: $(MPI_OBJECTS)
	$(AR) $(LIBNAME) $?
profile_all: 

clean:
	/bin/rm -f *~ $(MPI_OBJECTS) libmpid.a mprerr.o
	/bin/rm -f ${srcdir}/*.o

# 
# This doesn't remove the symbolic links, because there is no general easy
# way to identify that a filename is really a link (test -l works only on a 
# few systems; test -h works on more but not all).
distclean: clean
	@for file in ${SOURCE} ; do  \
	    if [ -h $$file ] ; then \
	        /bin/rm -f $$file ; fi \
	done
	@for file in ${MPIDHEADERS} ; do \
	    if [ -h $$file ] ; then \
	        /bin/rm -f $$file ; fi \
	done
	@if [ -d p2ptest -a -s p2ptest/Makefile ] ; then \
	    /bin/rm -f p2ptest/Makefile ; fi
	/bin/rm -f Makefile

MPIDHEADERS = Communicator.h chconfig.h mpid_time.h resource.h SocketException.h \
	      chdef.h mpiddebug.h wsockpriv.h TCPCommunicator.h getopt.h mpiddev.h \
	      channel.h inSocket.h packets.h nt2unix.h statistic.h

setlinks:
	@for file in $(SOURCE) ; do  \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/ch_ntshmem/$$file ] ; then \
	 	ln -s ${top_srcdir}/mpid/ch_ntshmem/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/lfbs_common/$$file ] ; then \
	 	ln -s ${top_srcdir}/mpid/lfbs_common/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/ch2/$$file ] ; then \
	 	ln -s ${top_srcdir}/mpid/ch2/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/util/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/util/$$file $$file ; fi ; \
	done
	@for file in $(MPIDHEADERS) ; do \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/ch_ntshmem/$$file ] ; then \
	 	ln -s ${top_srcdir}/mpid/ch_ntshmem/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/lfbs_common/$$file ] ; then \
	 	ln -s ${top_srcdir}/mpid/lfbs_common/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/ch2/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/ch2/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/util/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/util/$$file $$file ; fi ; \
	done
.c.o:
	$(CC) ${DEFS} $(CFLAGS) -c $< $(MPI_PROFILE)

.cpp.o:
	$(CXX) ${DEFS} $(CFLAGS) -c $< $(MPI_PROFILE)

#.c.s:
#	$(CC) ${DEFS} $(CFLAGS) -c -S $< $(MPI_PROFILE)

configure: configure.in ../../aclocal.m4
	autoheader --localdir=../..
	autoconf   --localdir=../..

${libbuild_dir}/lib@MPILIBNAME@.a: $(MPI_OBJECTS) 
	$(AR) $@ $?
	$(RANLIB) $@

libmpid.a: $(MPI_OBJECTS) mprerr.o
	$(AR) $@ $?
	$(RANLIB) $@


